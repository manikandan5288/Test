{"ast":null,"code":"import _classCallCheck from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Personal\\\\React\\\\Test\\\\src\\\\atoms\\\\Converter\\\\Converter.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../Converter/Converter.css\";\nvar SECRECT_KEY = '76f5ea65dcc33674258094294818f787';\n\nvar Converter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Converter, _React$Component);\n\n  function Converter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Converter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Converter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      result: null,\n      fromCurrency: \"USD\",\n      toCurrency: \"GBP\",\n      amount: 1,\n      baseCurrency: 'SEK',\n      baseCurrencyValue: 0,\n      currencies: [],\n      currencyRates: []\n    };\n\n    _this.convertHandler = function () {\n      //console.log('from ', this.state.fromCurrency)\n      // console.log('to ', this.state.toCurrency)\n      console.log(_this.state.baseCurrency);\n      console.log(_this.state.currencyRates);\n      var toCurrencyVal;\n\n      for (var key in _this.state.currencyRates) {\n        toCurrencyVal = _this.state.currencyRates[_this.state.toCurrency];\n      }\n\n      console.log('baseCurrencyCalue', _this.state.baseCurrencyValue);\n      console.log('toCurrencyVal', toCurrencyVal);\n      console.log('entered amount ', _this.state.amount);\n      var convertedValue = _this.state.amount / _this.state.baseCurrencyValue * toCurrencyVal;\n      console.log;\n\n      _this.setState({\n        result: 123\n      });\n\n      if (_this.state.fromCurrency !== _this.state.toCurrency) {} else {\n        _this.setState({\n          result: \"You cant convert the same currency!\"\n        });\n      }\n    };\n\n    _this.selectHandler = function (event) {\n      if (event.target.name === \"from\") {\n        _this.setState({\n          fromCurrency: event.target.value\n        });\n      }\n\n      if (event.target.name === \"to\") {\n        _this.setState({\n          toCurrency: event.target.value\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Converter, [{\n    key: \"componentDidMount\",\n    // Initializes the currencies with values from the api\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://data.fixer.io/api/latest?access_key=\".concat(SECRECT_KEY)).then(function (response) {\n        // Initialized with 'EUR' because the base currency is 'EUR'\n        // and it is not included in the response\n        var currencyAr = [\"EUR\"];\n        var baseCurrencyVal;\n\n        for (var key in response.data.rates) {\n          baseCurrencyVal = response.data.rates[_this2.state.baseCurrency];\n          currencyAr.push(key);\n        }\n\n        console.log('baseCurrencyVal', baseCurrencyVal);\n\n        _this2.setState({\n          baseCurrencyValue: baseCurrencyVal,\n          currencies: currencyAr.sort(),\n          currencyRates: response.data.rates\n        });\n      }).catch(function (err) {\n        console.log(\"Opps\", err.message);\n      });\n    } // Event handler for the conversion\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"I am converter\"), React.createElement(\"div\", {\n        className: \"Converter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"amount\",\n        type: \"text\",\n        value: this.state.amount,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            amount: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"to\",\n        onChange: function onChange(event) {\n          return _this3.selectHandler(event);\n        },\n        value: this.state.toCurrency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.currencies.map(function (cur) {\n        return React.createElement(\"option\", {\n          key: cur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, cur);\n      })), React.createElement(\"button\", {\n        onClick: this.convertHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Convert\")), this.state.result && React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.result)));\n    }\n  }]);\n\n  return Converter;\n}(React.Component);\n\nexport default Converter;","map":{"version":3,"sources":["D:\\Personal\\React\\Test\\src\\atoms\\Converter\\Converter.js"],"names":["React","axios","SECRECT_KEY","Converter","state","result","fromCurrency","toCurrency","amount","baseCurrency","baseCurrencyValue","currencies","currencyRates","convertHandler","console","log","toCurrencyVal","key","convertedValue","setState","selectHandler","event","target","name","value","get","then","response","currencyAr","baseCurrencyVal","data","rates","push","sort","catch","err","message","map","cur","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../Converter/Converter.css\"\r\n\r\nconst SECRECT_KEY = '76f5ea65dcc33674258094294818f787';\r\n\r\nclass Converter extends React.Component {\r\n  state = {\r\n    result: null,\r\n    fromCurrency: \"USD\",\r\n    toCurrency: \"GBP\",\r\n    amount: 1,\r\n    baseCurrency: 'SEK',\r\n    baseCurrencyValue: 0,\r\n    currencies: [],\r\n    currencyRates: []\r\n  };\r\n\r\n\r\n  // Initializes the currencies with values from the api\r\n  componentDidMount() {\r\n    axios.get(`http://data.fixer.io/api/latest?access_key=${SECRECT_KEY}`).then(response => {\r\n      // Initialized with 'EUR' because the base currency is 'EUR'\r\n      // and it is not included in the response\r\n      const currencyAr = [\"EUR\"];\r\n      let baseCurrencyVal;\r\n      for (const key in response.data.rates) {\r\n        baseCurrencyVal = response.data.rates[this.state.baseCurrency];\r\n        currencyAr.push(key)\r\n      }\r\n\r\n      console.log('baseCurrencyVal', baseCurrencyVal)\r\n      this.setState({\r\n        baseCurrencyValue: baseCurrencyVal,\r\n        currencies: currencyAr.sort(),\r\n        currencyRates: response.data.rates\r\n      });\r\n    })\r\n      .catch(err => {\r\n        console.log(\"Opps\", err.message);\r\n      });\r\n  }\r\n\r\n  // Event handler for the conversion\r\n  convertHandler = () => {\r\n    //console.log('from ', this.state.fromCurrency)\r\n    // console.log('to ', this.state.toCurrency)\r\n    console.log(this.state.baseCurrency)\r\n    console.log(this.state.currencyRates)\r\n\r\n    let toCurrencyVal;\r\n    for (const key in this.state.currencyRates) {\r\n      toCurrencyVal = this.state.currencyRates[this.state.toCurrency];\r\n    }\r\n    console.log('baseCurrencyCalue', this.state.baseCurrencyValue)\r\n    console.log('toCurrencyVal', toCurrencyVal)\r\n    console.log('entered amount ', this.state.amount)\r\n\r\n    let convertedValue = (this.state.amount / this.state.baseCurrencyValue) * toCurrencyVal;\r\n    console.log\r\n    this.setState({ result: 123 })\r\n\r\n    if (this.state.fromCurrency !== this.state.toCurrency) {\r\n\r\n    } else {\r\n      this.setState({ result: \"You cant convert the same currency!\" })\r\n    }\r\n  };\r\n\r\n  // Updates the states based on the dropdown that was changed\r\n  selectHandler = (event) => {\r\n    if (event.target.name === \"from\") {\r\n      this.setState({ fromCurrency: event.target.value })\r\n    }\r\n    if (event.target.name === \"to\") {\r\n      this.setState({ toCurrency: event.target.value })\r\n    }\r\n  }\r\n  render() {\r\n    return <div>\r\n      <h2>I am converter</h2>\r\n\r\n      <div className=\"Converter\">\r\n        <div className=\"Form\">\r\n          <input\r\n            name=\"amount\"\r\n            type=\"text\"\r\n            value={this.state.amount}\r\n            onChange={event =>\r\n              this.setState({ amount: event.target.value })\r\n            }\r\n          />\r\n          <select\r\n            name=\"to\"\r\n            onChange={(event) => this.selectHandler(event)}\r\n            value={this.state.toCurrency}\r\n          >\r\n            {this.state.currencies.map(cur => (\r\n              <option key={cur}>{cur}</option>\r\n            ))}\r\n          </select>\r\n          <button onClick={this.convertHandler}>Convert</button>\r\n        </div>\r\n        {this.state.result &&\r\n          <h3>{this.state.result}</h3>\r\n        }\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\nexport default Converter;\r\n"]},"metadata":{},"sourceType":"module"}