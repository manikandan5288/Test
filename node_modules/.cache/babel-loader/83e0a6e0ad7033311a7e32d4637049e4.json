{"ast":null,"code":"import _classCallCheck from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Personal\\\\React\\\\Test\\\\src\\\\atoms\\\\Converter\\\\Converter.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../Converter/Converter.css\";\n\nvar Converter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Converter, _React$Component);\n\n  function Converter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Converter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Converter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      result: null,\n      fromCurrency: \"USD\",\n      toCurrency: \"GBP\",\n      amount: 1,\n      currencies: []\n    };\n\n    _this.convertHandler = function () {\n      // \n      var url = \"\";\n\n      if (_this.state.fromCurrency !== _this.state.toCurrency) {\n        axios.get(\"http://api.openrates.io/latest?base=\".concat(_this.state.fromCurrency, \"&symbols=\").concat(_this.state.toCurrency)).then(function (response) {\n          var result = _this.state.amount * response.data.rates[_this.state.toCurrency];\n\n          _this.setState({\n            result: result.toFixed(5)\n          });\n        }).catch(function (err) {\n          console.log(\"Opps\", err.message);\n        });\n      } else {\n        _this.setState({\n          result: \"You cant convert the same currency!\"\n        });\n      }\n    };\n\n    _this.selectHandler = function (event) {\n      if (event.target.name === \"from\") {\n        _this.setState({\n          fromCurrency: event.target.value\n        });\n      }\n\n      if (event.target.name === \"to\") {\n        _this.setState({\n          toCurrency: event.target.value\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Converter, [{\n    key: \"componentDidMount\",\n    // Initializes the currencies with values from the api\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://data.fixer.io/api/latest?access_key=76f5ea65dcc33674258094294818f787\").then(function (response) {\n        // Initialized with 'EUR' because the base currency is 'EUR'\n        // and it is not included in the response\n        var currencyAr = [\"EUR\"];\n\n        for (var key in response.data.rates) {\n          currencyAr.push(key);\n        }\n\n        _this2.setState({\n          currencies: currencyAr.sort()\n        });\n      }).catch(function (err) {\n        console.log(\"Opps\", err.message);\n      });\n    } // Event handler for the conversion\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"I am converter\"), React.createElement(\"div\", {\n        className: \"Converter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Currency \"), \" Converter \", React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"money\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"\\uD83D\\uDCB5\"), \" \"), React.createElement(\"div\", {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"amount\",\n        type: \"text\",\n        value: this.state.amount,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            amount: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"from\",\n        onChange: function onChange(event) {\n          return _this3.selectHandler(event);\n        },\n        value: this.state.fromCurrency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.currencies.map(function (cur) {\n        return React.createElement(\"option\", {\n          key: cur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, cur);\n      })), React.createElement(\"select\", {\n        name: \"to\",\n        onChange: function onChange(event) {\n          return _this3.selectHandler(event);\n        },\n        value: this.state.toCurrency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.currencies.map(function (cur) {\n        return React.createElement(\"option\", {\n          key: cur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, cur);\n      })), React.createElement(\"button\", {\n        onClick: this.convertHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Convert\")), this.state.result && React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.result)));\n    }\n  }]);\n\n  return Converter;\n}(React.Component);\n\nexport default Converter;","map":{"version":3,"sources":["D:\\Personal\\React\\Test\\src\\atoms\\Converter\\Converter.js"],"names":["React","axios","Converter","state","result","fromCurrency","toCurrency","amount","currencies","convertHandler","url","get","then","response","data","rates","setState","toFixed","catch","err","console","log","message","selectHandler","event","target","name","value","currencyAr","key","push","sort","map","cur","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../Converter/Converter.css\"\r\n\r\nclass Converter extends React.Component {\r\n  state = {\r\n    result: null,\r\n    fromCurrency: \"USD\",\r\n    toCurrency: \"GBP\",\r\n    amount: 1,\r\n    currencies: [],\r\n  };\r\n\r\n\r\n  // Initializes the currencies with values from the api\r\n  componentDidMount() {\r\n    axios.get(`http://data.fixer.io/api/latest?access_key=76f5ea65dcc33674258094294818f787`).then(response => {\r\n      // Initialized with 'EUR' because the base currency is 'EUR'\r\n      // and it is not included in the response\r\n      const currencyAr = [\"EUR\"]\r\n      for (const key in response.data.rates) {\r\n        currencyAr.push(key)\r\n      }\r\n      this.setState({ currencies: currencyAr.sort() })\r\n    })\r\n      .catch(err => {\r\n        console.log(\"Opps\", err.message);\r\n      });\r\n  }\r\n\r\n  // Event handler for the conversion\r\n  convertHandler = () => {\r\n    // \r\n    const url = ``;\r\n    if (this.state.fromCurrency !== this.state.toCurrency) {\r\n      axios\r\n        .get(`http://api.openrates.io/latest?base=${this.state.fromCurrency}&symbols=${this.state.toCurrency}`)\r\n        .then(response => {\r\n          const result = this.state.amount * (response.data.rates[this.state.toCurrency]);\r\n          this.setState({ result: result.toFixed(5) })\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Opps\", err.message);\r\n        });\r\n    } else {\r\n      this.setState({ result: \"You cant convert the same currency!\" })\r\n    }\r\n  };\r\n\r\n  // Updates the states based on the dropdown that was changed\r\n  selectHandler = (event) => {\r\n    if (event.target.name === \"from\") {\r\n      this.setState({ fromCurrency: event.target.value })\r\n    }\r\n    if (event.target.name === \"to\") {\r\n      this.setState({ toCurrency: event.target.value })\r\n    }\r\n  }\r\n  render() {\r\n    return <div>\r\n      <h2>I am converter</h2>\r\n\r\n      <div className=\"Converter\">\r\n        <h2><span>Currency </span> Converter <span role=\"img\" aria-label=\"money\">&#x1f4b5;</span> </h2>\r\n        <div className=\"Form\">\r\n          <input\r\n            name=\"amount\"\r\n            type=\"text\"\r\n            value={this.state.amount}\r\n            onChange={event =>\r\n              this.setState({ amount: event.target.value })\r\n            }\r\n          />\r\n          <select\r\n            name=\"from\"\r\n            onChange={(event) => this.selectHandler(event)}\r\n            value={this.state.fromCurrency}\r\n          >\r\n            {this.state.currencies.map(cur => (\r\n              <option key={cur}>{cur}</option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            name=\"to\"\r\n            onChange={(event) => this.selectHandler(event)}\r\n            value={this.state.toCurrency}\r\n          >\r\n            {this.state.currencies.map(cur => (\r\n              <option key={cur}>{cur}</option>\r\n            ))}\r\n          </select>\r\n          <button onClick={this.convertHandler}>Convert</button>\r\n        </div>\r\n        {this.state.result &&\r\n          <h3>{this.state.result}</h3>\r\n        }\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\nexport default Converter;\r\n"]},"metadata":{},"sourceType":"module"}