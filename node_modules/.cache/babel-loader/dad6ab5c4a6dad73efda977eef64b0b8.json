{"ast":null,"code":"import _classCallCheck from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Personal\\\\React\\\\Test\\\\src\\\\atoms\\\\Converter\\\\Converter.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../Converter/Converter.css\";\nvar SECRECT_KEY = '76f5ea65dcc33674258094294818f787';\n\nvar Converter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Converter, _React$Component);\n\n  function Converter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Converter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Converter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      result: 0,\n      toCurrency: \"INR\",\n      amount: 1,\n      baseCurrency: 'SEK',\n      baseCurrencyValue: 0,\n      currencies: [],\n      currencyRates: []\n    };\n\n    _this.selectHandler = function (event) {\n      _this.setState({\n        toCurrency: event.target.value\n      });\n\n      console.log('i am select handler', _this.state.amount, event.target.value);\n\n      _this.convertHandler(_this.state.amount, event.target.value);\n    };\n\n    _this.convertHandler = function (amount, toCurrencyCode) {\n      if (_this.state.baseCurrency !== toCurrencyCode) {\n        console.log('this.state.toCurrency', toCurrencyCode);\n        var toCurrencyVal;\n\n        for (var key in _this.state.currencyRates) {\n          toCurrencyVal = _this.state.currencyRates[toCurrencyCode];\n        }\n\n        var convertedValue = amount / _this.state.baseCurrencyValue * toCurrencyVal;\n        console.log('convertedValue', convertedValue);\n\n        _this.setState({\n          result: convertedValue\n        });\n      } else {\n        _this.setState({\n          result: \"You can't convert the same currency!\"\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Converter, [{\n    key: \"componentDidMount\",\n    // Initializes the currencies with values from the api\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.state.amount);\n      axios.get(\"http://data.fixer.io/api/latest?access_key=\".concat(SECRECT_KEY)).then(function (response) {\n        var currencyAr = [];\n        var baseCurrencyVal;\n\n        for (var key in response.data.rates) {\n          baseCurrencyVal = response.data.rates[_this2.state.baseCurrency];\n          currencyAr.push(key);\n        }\n\n        _this2.setState({\n          baseCurrencyValue: baseCurrencyVal,\n          currencies: currencyAr.sort(),\n          currencyRates: response.data.rates\n        });\n\n        _this2.convertHandler(_this2.state.amount, _this2.state.toCurrency);\n      }).catch(function (err) {\n        console.log(\"Opps\", err.message);\n      });\n    }\n  }, {\n    key: \"onChangeHandle\",\n    value: function onChangeHandle(e) {\n      console.log('onchange', this.state.toCurrency);\n      this.setState({\n        amount: e.target.value\n      });\n      this.convertHandler(e.target.value, this.state.toCurrency);\n    } // Updates the states based on the dropdown that was changed\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Converter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"amount\",\n        type: \"number\",\n        placeholder: \"Enter SEK Amount\",\n        value: this.state.amount,\n        onChange: function onChange(event) {\n          return _this3.onChangeHandle(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"to\",\n        onChange: function onChange(event) {\n          return _this3.selectHandler(event);\n        },\n        value: this.state.toCurrency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.currencies.map(function (currency) {\n        return React.createElement(\"option\", {\n          key: currency,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, currency);\n      })), React.createElement(\"input\", {\n        name: \"converted-amount\",\n        type: \"text\",\n        value: \"\".concat(this.state.result, \" \").concat(this.state.toC),\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Converter;\n}(React.Component);\n\nexport default Converter;","map":{"version":3,"sources":["D:\\Personal\\React\\Test\\src\\atoms\\Converter\\Converter.js"],"names":["React","axios","SECRECT_KEY","Converter","state","result","toCurrency","amount","baseCurrency","baseCurrencyValue","currencies","currencyRates","selectHandler","event","setState","target","value","console","log","convertHandler","toCurrencyCode","toCurrencyVal","key","convertedValue","get","then","response","currencyAr","baseCurrencyVal","data","rates","push","sort","catch","err","message","e","onChangeHandle","map","currency","toC","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../Converter/Converter.css\"\r\n\r\nconst SECRECT_KEY = '76f5ea65dcc33674258094294818f787';\r\n\r\nclass Converter extends React.Component {\r\n  state = {\r\n    result: 0,\r\n    toCurrency: \"INR\",\r\n    amount: 1,\r\n    baseCurrency: 'SEK',\r\n    baseCurrencyValue: 0,\r\n    currencies: [],\r\n    currencyRates: []\r\n  };\r\n\r\n\r\n  // Initializes the currencies with values from the api\r\n  componentDidMount() {\r\n    console.log(this.state.amount)\r\n    axios.get(`http://data.fixer.io/api/latest?access_key=${SECRECT_KEY}`).then(response => {\r\n      const currencyAr = [];\r\n      let baseCurrencyVal;\r\n      for (let key in response.data.rates) {\r\n        baseCurrencyVal = response.data.rates[this.state.baseCurrency];\r\n        currencyAr.push(key)\r\n      }\r\n      this.setState({\r\n        baseCurrencyValue: baseCurrencyVal,\r\n        currencies: currencyAr.sort(),\r\n        currencyRates: response.data.rates\r\n      });\r\n      this.convertHandler(this.state.amount, this.state.toCurrency);\r\n    })\r\n      .catch(err => {\r\n        console.log(\"Opps\", err.message);\r\n      });\r\n  }\r\n\r\n  onChangeHandle(e) {\r\n    console.log('onchange', this.state.toCurrency)\r\n    this.setState({ amount: e.target.value })\r\n    this.convertHandler(e.target.value, this.state.toCurrency);\r\n  }\r\n\r\n  // Updates the states based on the dropdown that was changed\r\n  selectHandler = (event) => {\r\n\r\n    this.setState({ toCurrency: event.target.value })\r\n    console.log('i am select handler', this.state.amount, event.target.value)\r\n    this.convertHandler(this.state.amount, event.target.value);\r\n  }\r\n\r\n  // Event handler for the conversion\r\n  convertHandler = (amount, toCurrencyCode) => {\r\n    if (this.state.baseCurrency !== toCurrencyCode) {\r\n      console.log('this.state.toCurrency', toCurrencyCode)\r\n      let toCurrencyVal;\r\n      for (let key in this.state.currencyRates) {\r\n        toCurrencyVal = this.state.currencyRates[toCurrencyCode];\r\n      }\r\n      let convertedValue = (amount / this.state.baseCurrencyValue) * toCurrencyVal;\r\n      console.log('convertedValue', convertedValue)\r\n      this.setState({ result: convertedValue })\r\n\r\n    } else {\r\n      this.setState({ result: \"You can't convert the same currency!\" })\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"Converter\">\r\n      <div className=\"Form\">\r\n        <input\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          placeholder=\"Enter SEK Amount\"\r\n          value={this.state.amount}\r\n          onChange={event => this.onChangeHandle(event)}\r\n        />\r\n        <select\r\n          name=\"to\"\r\n          onChange={(event) => this.selectHandler(event)}\r\n          value={this.state.toCurrency}\r\n        >\r\n          {this.state.currencies.map(currency => (\r\n            <option key={currency}>{currency}</option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          name=\"converted-amount\"\r\n          type=\"text\"\r\n          value={`${this.state.result} ${this.state.toC}` }\r\n      readOnly\r\n    />\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\nexport default Converter;\r\n"]},"metadata":{},"sourceType":"module"}