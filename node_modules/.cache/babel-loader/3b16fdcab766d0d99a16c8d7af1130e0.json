{"ast":null,"code":"import _classCallCheck from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Personal\\\\React\\\\Test\\\\src\\\\atoms\\\\Converter\\\\Converter.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../Converter/Converter.css\";\nvar SECRECT_KEY = '76f5ea65dcc33674258094294818f787';\n\nvar Converter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Converter, _React$Component);\n\n  function Converter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Converter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Converter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      result: 0.00,\n      toCurrency: \"INR\",\n      amount: 1,\n      baseCurrency: 'SEK',\n      baseCurrencyValue: 0,\n      currencies: [],\n      currencyRates: []\n    };\n\n    _this.convertHandler = function () {\n      console.log('this.state.toCurrency', _this.state.toCurrency); //console.log('this.state.toCurrencyValue', this.state.toCurrencyValue)\n\n      if (_this.state.baseCurrency !== _this.state.toCurrency) {\n        conso;\n        var toCurrencyVal;\n\n        for (var key in _this.state.currencyRates) {\n          toCurrencyVal = _this.state.currencyRates[_this.state.toCurrency];\n        }\n\n        var convertedValue = _this.state.amount / _this.state.baseCurrencyValue * toCurrencyVal;\n        console.log('convertedValue', convertedValue);\n\n        _this.setState({\n          result: convertedValue ? convertedValue.toFixed(2) : 0\n        });\n      } else {\n        _this.setState({\n          result: \"You cant convert the same currency!\"\n        });\n      }\n    };\n\n    _this.selectHandler = function (event) {\n      if (event.target.name === \"to\") {\n        _this.setState({\n          toCurrency: event.target.value\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Converter, [{\n    key: \"componentDidMount\",\n    // Initializes the currencies with values from the api\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://data.fixer.io/api/latest?access_key=\".concat(SECRECT_KEY)).then(function (response) {\n        var currencyAr = [];\n        var baseCurrencyVal;\n        var defaultValue;\n\n        for (var key in response.data.rates) {\n          baseCurrencyVal = response.data.rates[_this2.state.baseCurrency];\n          currencyAr.push(key);\n        }\n\n        _this2.setState({\n          baseCurrencyValue: baseCurrencyVal,\n          currencies: currencyAr.sort(),\n          currencyRates: response.data.rates\n        });\n      }).catch(function (err) {\n        console.log(\"Opps\", err.message);\n      });\n      this.convertHandler();\n    }\n  }, {\n    key: \"onChangeHandle\",\n    value: function onChangeHandle(e) {\n      console.log('i am onchange');\n      this.setState({\n        amount: e.target.value\n      });\n      this.convertHandler();\n    } // Event handler for the conversion\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"I am converter\"), React.createElement(\"div\", {\n        className: \"Converter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"amount\",\n        type: \"text\",\n        value: this.state.amount,\n        onChange: function onChange(event) {\n          return _this3.onChangeHandle(event);\n        }\n        /* onChange={event =>\r\n           this.setState({ amount: event.target.value })\r\n         } */\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"to\",\n        onChange: function onChange(event) {\n          return _this3.selectHandler(event);\n        },\n        value: this.state.toCurrency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.state.currencies.map(function (cur) {\n        return React.createElement(\"option\", {\n          key: cur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, cur);\n      })), React.createElement(\"button\", {\n        onClick: this.convertHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Convert\"), React.createElement(\"input\", {\n        name: \"converted-amount\",\n        type: \"text\",\n        value: this.state.result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), this.state.result && React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.state.result)));\n    }\n  }]);\n\n  return Converter;\n}(React.Component);\n\nexport default Converter;","map":{"version":3,"sources":["D:\\Personal\\React\\Test\\src\\atoms\\Converter\\Converter.js"],"names":["React","axios","SECRECT_KEY","Converter","state","result","toCurrency","amount","baseCurrency","baseCurrencyValue","currencies","currencyRates","convertHandler","console","log","conso","toCurrencyVal","key","convertedValue","setState","toFixed","selectHandler","event","target","name","value","get","then","response","currencyAr","baseCurrencyVal","defaultValue","data","rates","push","sort","catch","err","message","e","onChangeHandle","map","cur","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../Converter/Converter.css\"\r\n\r\nconst SECRECT_KEY = '76f5ea65dcc33674258094294818f787';\r\n\r\nclass Converter extends React.Component {\r\n  state = {\r\n    result: 0.00,\r\n    toCurrency: \"INR\",\r\n    amount: 1,\r\n    baseCurrency: 'SEK',\r\n    baseCurrencyValue: 0,\r\n    currencies: [],\r\n    currencyRates: []\r\n  };\r\n\r\n\r\n  // Initializes the currencies with values from the api\r\n  componentDidMount() {\r\n    axios.get(`http://data.fixer.io/api/latest?access_key=${SECRECT_KEY}`).then(response => {\r\n      const currencyAr = [];\r\n      let baseCurrencyVal;\r\n      let defaultValue;\r\n      for (const key in response.data.rates) {\r\n        baseCurrencyVal = response.data.rates[this.state.baseCurrency];\r\n        currencyAr.push(key)\r\n      }\r\n      this.setState({\r\n        baseCurrencyValue: baseCurrencyVal,\r\n        currencies: currencyAr.sort(),\r\n        currencyRates: response.data.rates\r\n      });\r\n    })\r\n      .catch(err => {\r\n        console.log(\"Opps\", err.message);\r\n      });\r\n\r\n    this.convertHandler();\r\n  }\r\n\r\n  onChangeHandle(e) {\r\n    console.log('i am onchange')\r\n    this.setState({ amount: e.target.value })\r\n    this.convertHandler();\r\n  }\r\n\r\n  // Event handler for the conversion\r\n  convertHandler = () => {\r\n    console.log('this.state.toCurrency', this.state.toCurrency)\r\n    //console.log('this.state.toCurrencyValue', this.state.toCurrencyValue)\r\n    if (this.state.baseCurrency !== this.state.toCurrency) {\r\n      conso\r\n      let toCurrencyVal;\r\n      for (const key in this.state.currencyRates) {\r\n        toCurrencyVal = this.state.currencyRates[this.state.toCurrency];\r\n      }\r\n      let convertedValue = (this.state.amount / this.state.baseCurrencyValue) * toCurrencyVal;\r\n      console.log('convertedValue', convertedValue)\r\n      this.setState({ result: convertedValue ? convertedValue.toFixed(2) : 0 })\r\n\r\n    } else {\r\n      this.setState({ result: \"You cant convert the same currency!\" })\r\n    }\r\n  };\r\n\r\n  // Updates the states based on the dropdown that was changed\r\n  selectHandler = (event) => {\r\n    if (event.target.name === \"to\") {\r\n      this.setState({ toCurrency: event.target.value })\r\n    }\r\n  }\r\n  render() {\r\n    return <div>\r\n      <h2>I am converter</h2>\r\n\r\n      <div className=\"Converter\">\r\n        <div className=\"Form\">\r\n          <input\r\n            name=\"amount\"\r\n            type=\"text\"\r\n            value={this.state.amount}\r\n            onChange={event => this.onChangeHandle(event)}\r\n          /* onChange={event =>\r\n             this.setState({ amount: event.target.value })\r\n           } */\r\n          />\r\n          <select\r\n            name=\"to\"\r\n            onChange={(event) => this.selectHandler(event)}\r\n            value={this.state.toCurrency}\r\n          >\r\n            {this.state.currencies.map(cur => (\r\n              <option key={cur}>{cur}</option>\r\n            ))}\r\n          </select>\r\n          <button onClick={this.convertHandler}>Convert</button>\r\n          <input\r\n            name=\"converted-amount\"\r\n            type=\"text\"\r\n            value={this.state.result}\r\n          />\r\n        </div>\r\n        {this.state.result &&\r\n          <h3>{this.state.result}</h3>\r\n        }\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\nexport default Converter;\r\n"]},"metadata":{},"sourceType":"module"}