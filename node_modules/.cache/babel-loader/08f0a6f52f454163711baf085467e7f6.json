{"ast":null,"code":"import _classCallCheck from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Personal\\\\React\\\\Test\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Personal\\\\React\\\\Test\\\\src\\\\atoms\\\\Converter\\\\Converter.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport \"../Converter/Converter.css\";\nvar SECRECT_KEY = '76f5ea65dcc33674258094294818f787';\n\nvar Converter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Converter, _React$Component);\n\n  function Converter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Converter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Converter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      result: null,\n      fromCurrency: \"USD\",\n      toCurrency: \"GBP\",\n      amount: 1,\n      baseCurrency: 'SEK',\n      currencies: []\n    };\n\n    _this.convertHandler = function () {\n      console.log('from ', _this.state.fromCurrency);\n      console.log('to ', _this.state.toCurrency);\n      var url = \"http://data.fixer.io/api/latest?access_key=\".concat(SECRECT_KEY, \"&base=\").concat(_this.state.fromCurrency, \"&symbols=\").concat(_this.state.toCurrency);\n\n      if (_this.state.fromCurrency !== _this.state.toCurrency) {\n        axios.get(url).then(function (response) {\n          var result = _this.state.amount * response.data.rates[_this.state.toCurrency];\n\n          _this.setState({\n            result: result.toFixed(5)\n          });\n        }).catch(function (err) {\n          console.log(\"Opps\", err.message);\n        });\n      } else {\n        _this.setState({\n          result: \"You cant convert the same currency!\"\n        });\n      }\n    };\n\n    _this.selectHandler = function (event) {\n      if (event.target.name === \"from\") {\n        _this.setState({\n          fromCurrency: event.target.value\n        });\n      }\n\n      if (event.target.name === \"to\") {\n        _this.setState({\n          toCurrency: event.target.value\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Converter, [{\n    key: \"componentDidMount\",\n    // Initializes the currencies with values from the api\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://data.fixer.io/api/latest?access_key=\".concat(SECRECT_KEY)).then(function (response) {\n        // Initialized with 'EUR' because the base currency is 'EUR'\n        // and it is not included in the response\n        var currencyAr = [\"EUR\"];\n        var baseCurrencyVal;\n\n        for (var key in response.data.rates) {\n          baseCurrencyVal = response.data.rates[_this2.state.baseCurrency];\n          currencyAr.push(key);\n        }\n\n        console.log('baseCurrencyVal', baseCurrencyVal);\n\n        _this2.setState({\n          baseCurrency: baseCurrencyVal\n        }); // console.log(this.state.baseCurrency)\n\n\n        _this2.setState({\n          currencies: currencyAr.sort()\n        });\n\n        console.log(_this2.state.currencies);\n      }).catch(function (err) {\n        console.log(\"Opps\", err.message);\n      });\n    } // Event handler for the conversion\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"I am converter\"), React.createElement(\"div\", {\n        className: \"Converter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Currency \"), \" Converter \", React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"money\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"\\uD83D\\uDCB5\"), \" \"), React.createElement(\"div\", {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"amount\",\n        type: \"text\",\n        value: this.state.amount,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            amount: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        name: \"from\",\n        onChange: function onChange(event) {\n          return _this3.selectHandler(event);\n        },\n        value: this.state.fromCurrency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.state.currencies.map(function (cur) {\n        return React.createElement(\"option\", {\n          key: cur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, cur);\n      })), React.createElement(\"select\", {\n        name: \"to\",\n        onChange: function onChange(event) {\n          return _this3.selectHandler(event);\n        },\n        value: this.state.toCurrency,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.currencies.map(function (cur) {\n        return React.createElement(\"option\", {\n          key: cur,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, cur);\n      })), React.createElement(\"button\", {\n        onClick: this.convertHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Convert\")), this.state.result && React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.result)));\n    }\n  }]);\n\n  return Converter;\n}(React.Component);\n\nexport default Converter;","map":{"version":3,"sources":["D:\\Personal\\React\\Test\\src\\atoms\\Converter\\Converter.js"],"names":["React","axios","SECRECT_KEY","Converter","state","result","fromCurrency","toCurrency","amount","baseCurrency","currencies","convertHandler","console","log","url","get","then","response","data","rates","setState","toFixed","catch","err","message","selectHandler","event","target","name","value","currencyAr","baseCurrencyVal","key","push","sort","map","cur","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from 'axios';\r\nimport \"../Converter/Converter.css\"\r\n\r\nconst SECRECT_KEY = '76f5ea65dcc33674258094294818f787';\r\n\r\nclass Converter extends React.Component {\r\n  state = {\r\n    result: null,\r\n    fromCurrency: \"USD\",\r\n    toCurrency: \"GBP\",\r\n    amount: 1,\r\n    baseCurrency: 'SEK',\r\n    currencies: [],\r\n  };\r\n\r\n\r\n  // Initializes the currencies with values from the api\r\n  componentDidMount() {\r\n    axios.get(`http://data.fixer.io/api/latest?access_key=${SECRECT_KEY}`).then(response => {\r\n      // Initialized with 'EUR' because the base currency is 'EUR'\r\n      // and it is not included in the response\r\n      const currencyAr = [\"EUR\"];\r\n      let baseCurrencyVal;\r\n      for (const key in response.data.rates) {\r\n        baseCurrencyVal = response.data.rates[this.state.baseCurrency];\r\n        currencyAr.push(key)\r\n      }\r\n\r\n      console.log('baseCurrencyVal', baseCurrencyVal)\r\n      this.setState({ baseCurrency: baseCurrencyVal })\r\n      // console.log(this.state.baseCurrency)\r\n\r\n      this.setState({ currencies: currencyAr.sort() })\r\n\r\n      console.log(this.state.currencies)\r\n    })\r\n      .catch(err => {\r\n        console.log(\"Opps\", err.message);\r\n      });\r\n  }\r\n\r\n  // Event handler for the conversion\r\n  convertHandler = () => {\r\n    console.log('from ', this.state.fromCurrency)\r\n    console.log('to ', this.state.toCurrency)\r\n    const url = `http://data.fixer.io/api/latest?access_key=${SECRECT_KEY}&base=${this.state.fromCurrency}&symbols=${this.state.toCurrency}`;\r\n    if (this.state.fromCurrency !== this.state.toCurrency) {\r\n      axios\r\n        .get(url)\r\n        .then(response => {\r\n          const result = this.state.amount * (response.data.rates[this.state.toCurrency]);\r\n          this.setState({ result: result.toFixed(5) })\r\n        })\r\n        .catch(err => {\r\n          console.log(\"Opps\", err.message);\r\n        });\r\n    } else {\r\n      this.setState({ result: \"You cant convert the same currency!\" })\r\n    }\r\n  };\r\n\r\n  // Updates the states based on the dropdown that was changed\r\n  selectHandler = (event) => {\r\n    if (event.target.name === \"from\") {\r\n      this.setState({ fromCurrency: event.target.value })\r\n    }\r\n    if (event.target.name === \"to\") {\r\n      this.setState({ toCurrency: event.target.value })\r\n    }\r\n  }\r\n  render() {\r\n    return <div>\r\n      <h2>I am converter</h2>\r\n\r\n      <div className=\"Converter\">\r\n        <h2><span>Currency </span> Converter <span role=\"img\" aria-label=\"money\">&#x1f4b5;</span> </h2>\r\n        <div className=\"Form\">\r\n          <input\r\n            name=\"amount\"\r\n            type=\"text\"\r\n            value={this.state.amount}\r\n            onChange={event =>\r\n              this.setState({ amount: event.target.value })\r\n            }\r\n          />\r\n          <select\r\n            name=\"from\"\r\n            onChange={(event) => this.selectHandler(event)}\r\n            value={this.state.fromCurrency}\r\n          >\r\n            {this.state.currencies.map(cur => (\r\n              <option key={cur}>{cur}</option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            name=\"to\"\r\n            onChange={(event) => this.selectHandler(event)}\r\n            value={this.state.toCurrency}\r\n          >\r\n            {this.state.currencies.map(cur => (\r\n              <option key={cur}>{cur}</option>\r\n            ))}\r\n          </select>\r\n          <button onClick={this.convertHandler}>Convert</button>\r\n        </div>\r\n        {this.state.result &&\r\n          <h3>{this.state.result}</h3>\r\n        }\r\n      </div>\r\n    </div>;\r\n  }\r\n}\r\nexport default Converter;\r\n"]},"metadata":{},"sourceType":"module"}